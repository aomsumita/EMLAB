#include <ESP32Servo.h>

#define IR_START_PIN 35  // IR Sensor ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
#define IR_END_PIN 27    // IR Sensor ‡∏à‡∏∏‡∏î‡∏õ‡∏•‡∏≤‡∏¢
#define SERVO_PIN 25     // ‡∏Ç‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Servo
#define BUTTON_PIN 16    // ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï Servo

Servo myservo;
bool timing = false;      // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
bool finished = false;    // ‡∏à‡∏ö‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
unsigned long startTime;  // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö
unsigned long endTime;    // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
const float servoResponseTime = 0.15; 

float delayTime = 0;      // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
bool servocheck = false;  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
unsigned long servoTime = 0; // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

void setup() {
    Serial.begin(115200);
    pinMode(IR_START_PIN, INPUT);
    pinMode(IR_END_PIN, INPUT);
    pinMode(BUTTON_PIN, INPUT_PULLUP);
    
    myservo.attach(SERVO_PIN);
    myservo.write(0);  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà 0 ‡∏≠‡∏á‡∏®‡∏≤
}

void loop() {
    int startSensor = digitalRead(IR_START_PIN);
    int endSensor = digitalRead(IR_END_PIN);
    int buttonState = digitalRead(BUTTON_PIN);

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô)
    if (startSensor == LOW && !timing && !finished) {
        startTime = millis();
        timing = true;
        Serial.println("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤!");
    }

    // ‡∏´‡∏¢‡∏∏‡∏î‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏¢‡∏π‡πà)
    if (endSensor == LOW && timing) {
        endTime = millis();
        unsigned long totalTime = endTime - startTime;
        float timeInSeconds = totalTime / 1000.0;
        Serial.print("üèÅ allTime: "); 
        Serial.print(timeInSeconds);
        Serial.println(" sec");

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
        float distance = 5.0; // ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
        float velocity = distance / timeInSeconds;
        Serial.print("‚ö° Velocity: ");
        Serial.print(velocity);
        Serial.println(" cm/s");

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤ Timefind
        float s = 30.0;  // ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
        float a = 9.81 * sin(9 * PI / 180); // ‡πÅ‡∏£‡∏á‡πÇ‡∏ô‡πâ‡∏°‡∏ñ‡πà‡∏ß‡∏á‡∏ï‡∏≤‡∏°‡∏°‡∏∏‡∏°
        float v = velocity;
        float A = 0.5 * a;
        float B = v;
        float C = -s;
        float discriminant = (B * B - 4 * A * C);
        float Timefind = -1;

        if (discriminant >= 0) {
            float t1 = (-B - sqrt(discriminant)) / (2 * A);
            float t2 = (-B + sqrt(discriminant)) / (2 * A);
            Timefind = (t1 > 0) ? t1 : t2;
            Serial.print("‚è≥ END Time: ");
            Serial.print(Timefind, 3);  // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 3 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
            Serial.println(" sec");
        } else {
            Serial.println("‚ùå No real solution for time");
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ Timefind ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ
        if (Timefind > 0) {
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡∏ö‡πÑ‡∏°‡πâ‡∏Å‡∏±‡πâ‡∏ô
            delayTime = (Timefind - servoResponseTime) * 1000;
            if (delayTime < 0) delayTime = 0;

            // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
            servoTime = millis() + delayTime;
            servocheck = true;
            Serial.print("‚è≥ Servo will trigger in ");
            Serial.print(delayTime / 1000.0);
            Serial.println(" sec");
        } else {
            Serial.println("‚ö†Ô∏è Invalid Timefind, skipping servo trigger!");
        }

        // ‡∏´‡∏¢‡∏∏‡∏î‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
        timing = false;
        finished = true;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß
    if (servocheck && millis() >= servoTime) {
        myservo.write(90);  // ‡∏™‡∏±‡∏ö‡πÑ‡∏°‡πâ‡∏Å‡∏±‡πâ‡∏ô‡∏•‡∏á
        Serial.println("üîª Catch you!");
        servocheck = false;
    }

    // ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‚Üí ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà
    if (buttonState == LOW) {
        Serial.println("üîÑ Reset!");
        myservo.write(0);
        finished = false;
        servocheck = false;
        delay(300);  // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
    }
}